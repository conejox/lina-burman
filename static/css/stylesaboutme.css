body {
    background-image: url('../images/img_10.JPG');
    display: flex;
    flex-direction: column;
    min-height: 110vh;
} 
    
.container {
    display: grid;
    grid-template-columns: 1fr 1fr; /* Two columns */
    grid-template-rows: 1fr 1fr; /* Two rows */
    gap: 10px; /* Adjust the gap between grid items as needed */
    height: 120vh; /* Adjust based on your needs, this takes the full height of the viewport */
    flex:1;
}

.item {
    width: 100%;
    height: 45vh; /* Half of the viewport height to maintain a square aspect ratio */
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Optional: prevents content from spilling out of the squares */
}

/* Ensuring images within items fill the container */
.item img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Adjusts the image size to cover the area without losing its aspect ratio */
}
.footer {
    position: relative;
    width: 100%;
    background-color: #333;
    color: white;
    text-align: center;
}
.item.text {
    background-color: white; /* Sets the background color to white */
    padding: 10px; /* Adds some padding inside the square */
    box-sizing: border-box; /* Ensures padding does not increase the size of the box */
    height: 400px; /* Sets a fixed height */
    width: 600px; /* Sets a fixed width */
    display: flex; /* Enables flexbox layout */
    justify-content: center; /* Centers content horizontally */
    align-items: center; /* Centers content vertically */
    text-align: center; /* Centers text */
    margin: auto; /* Centers the square in its container if it's smaller */
}